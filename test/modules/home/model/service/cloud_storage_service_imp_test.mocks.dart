// Mocks generated by Mockito 5.3.0 from annotations
// in cloud_storage/test/modules/home/model/service/cloud_storage_service_imp_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:io' as _i4;

import 'package:cloud_storage/modules/home/model/service/cloud_storage_service_imp.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CloudStorageServiceImp].
///
/// See the documentation for Mockito's code generation for more information.
class MockCloudStorageServiceImp extends _i1.Mock
    implements _i2.CloudStorageServiceImp {
  MockCloudStorageServiceImp() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<String>> getStorageImagesUrl() =>
      (super.noSuchMethod(Invocation.method(#getStorageImagesUrl, []),
              returnValue: _i3.Future<List<String>>.value(<String>[]))
          as _i3.Future<List<String>>);
  @override
  _i3.Future<dynamic> uploadNewImage({_i4.File? file}) =>
      (super.noSuchMethod(Invocation.method(#uploadNewImage, [], {#file: file}),
          returnValue: _i3.Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<void> deleteImage({String? urlImage}) => (super.noSuchMethod(
      Invocation.method(#deleteImage, [], {#urlImage: urlImage}),
      returnValue: _i3.Future<void>.value(),
      returnValueForMissingStub: _i3.Future<void>.value()) as _i3.Future<void>);
}
